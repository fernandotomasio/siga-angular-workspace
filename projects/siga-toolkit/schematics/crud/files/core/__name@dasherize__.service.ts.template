import { Injectable } from '@angular/core';
import { HttpClient, HttpParams } from '@angular/common/http';
import { Observable } from 'rxjs';
import { <%= classify(name) %> } from '../model/<%= dasherize(name) %>';
import { environment } from '../../environments/environment';
import {removeEmptyFields} from '../helper/form-helper';

@Injectable({
  providedIn: 'root'
})
export class <%= classify(name) %>Service {

  
  constructor(private http: HttpClient) { }

  findAll(search: any): Observable<any> {
    removeEmptyFields(search)
    const params = new HttpParams({fromObject: search })
    return this.http.get<any>(`${environment.API_ENDPOINT_URL}<%= resource %>`, { params: search })
  }
  find(id: number): Observable<<%= classify(name) %>> {
    return this.http.get<<%= classify(name) %>>(`${environment.API_ENDPOINT_URL}<%= resource %>/${id}`)
  }
  remove(id: number): Observable<any> {
    return this.http.delete<any>(`${environment.API_ENDPOINT_URL}<%= resource %>/${id}`)
  }

  save(data:any): Observable<<%= classify(name) %>>{
    return !data.id
    ? this.http.post<<%= classify(name) %>>(`${environment.API_ENDPOINT_URL}<%= resource %>/`, data)
    : this.http.put<<%= classify(name) %>>(`${environment.API_ENDPOINT_URL}<%= resource %>/`, data)
  }
}
