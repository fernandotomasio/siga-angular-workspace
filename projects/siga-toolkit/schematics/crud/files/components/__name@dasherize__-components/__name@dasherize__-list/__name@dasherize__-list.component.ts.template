import { Component, OnInit, Output, EventEmitter } from '@angular/core';
import { <%= classify(name) %> } from '../../../model/<%= dasherize(name) %>';
import { <%= classify(name) %>Service } from '../../../core/<%= dasherize(name) %>.service';
import { PageEvent } from '@angular/material/paginator';
import { Sort } from '@angular/material/sort';

@Component({
  selector: '[app-<%= dasherize(name) %>-list]',
  templateUrl: './<%= dasherize(name) %>-list.component.html'
})
export class <%= classify(name) %>ListComponent implements OnInit {
  @Output() action = new EventEmitter<any>()
  paginateOptions = [10, 20, 30]

  totalCount: number
  filteredCount: number
  columnsToDisplay = [<%= commaSeparatedAttributes(attributes) %>, 'acoes']


 search:any = {
    paginate: 'true',
    size: '10',
    page: '0',
    orderBy: []
  }
  
  dataList: <%= classify(name) %>[]

  constructor(private service: <%= classify(name) %>Service) {
  }

  ngOnInit() {
    
  }

  refresh() {
    this.service.findAll(this.search).subscribe(response => {
      this.dataList = response.data
      this.totalCount = response.totalCount
      this.filteredCount = response.filteredCount
    })
  }

  onPageChange(event: PageEvent) {
    this.search.size = event.pageSize
    this.search.page = event.pageIndex
    this.refresh()
  }

  onSortChange(event: Sort) {
    switch(event.direction){
      case 'asc':
        this.search.orderBy = [event.active]
      break
      case 'desc':
        this.search.orderBy = ['-' + event.active]
      break
      default:
        this.search.orderBy = []
    }
    this.refresh()
  }


  raiseAction(action: string, id: number) {
    this.action.emit({ 
      action: action, 
      id: id 
    })
  }

  onSearchChange(event: any){
    this.search = Object.assign(this.search, event)
    this.refresh()
  }
}